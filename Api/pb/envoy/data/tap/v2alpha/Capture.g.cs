// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/data/tap/v2alpha/capture.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Data.Tap.V2Alpha {

  /// <summary>Holder for reflection information generated from envoy/data/tap/v2alpha/capture.proto</summary>
  public static partial class CaptureReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/data/tap/v2alpha/capture.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CaptureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRlbnZveS9kYXRhL3RhcC92MmFscGhhL2NhcHR1cmUucHJvdG8SFmVudm95",
            "LmRhdGEudGFwLnYyYWxwaGEaH2Vudm95L2FwaS92Mi9jb3JlL2FkZHJlc3Mu",
            "cHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8ifwoKQ29u",
            "bmVjdGlvbhIKCgJpZBgBIAEoBBIxCg1sb2NhbF9hZGRyZXNzGAIgASgLMhou",
            "ZW52b3kuYXBpLnYyLmNvcmUuQWRkcmVzcxIyCg5yZW1vdGVfYWRkcmVzcxgD",
            "IAEoCzIaLmVudm95LmFwaS52Mi5jb3JlLkFkZHJlc3Mi8wEKBUV2ZW50Ei0K",
            "CXRpbWVzdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "MgoEcmVhZBgCIAEoCzIiLmVudm95LmRhdGEudGFwLnYyYWxwaGEuRXZlbnQu",
            "UmVhZEgAEjQKBXdyaXRlGAMgASgLMiMuZW52b3kuZGF0YS50YXAudjJhbHBo",
            "YS5FdmVudC5Xcml0ZUgAGhQKBFJlYWQSDAoEZGF0YRgBIAEoDBopCgVXcml0",
            "ZRIMCgRkYXRhGAEgASgMEhIKCmVuZF9zdHJlYW0YAiABKAhCEAoOZXZlbnRf",
            "c2VsZWN0b3IibgoFVHJhY2USNgoKY29ubmVjdGlvbhgBIAEoCzIiLmVudm95",
            "LmRhdGEudGFwLnYyYWxwaGEuQ29ubmVjdGlvbhItCgZldmVudHMYAiADKAsy",
            "HS5lbnZveS5kYXRhLnRhcC52MmFscGhhLkV2ZW50QgRaAnYyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Core.AddressReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Tap.V2Alpha.Connection), global::Envoy.Data.Tap.V2Alpha.Connection.Parser, new[]{ "Id", "LocalAddress", "RemoteAddress" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Tap.V2Alpha.Event), global::Envoy.Data.Tap.V2Alpha.Event.Parser, new[]{ "Timestamp", "Read", "Write" }, new[]{ "EventSelector" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Tap.V2Alpha.Event.Types.Read), global::Envoy.Data.Tap.V2Alpha.Event.Types.Read.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Tap.V2Alpha.Event.Types.Write), global::Envoy.Data.Tap.V2Alpha.Event.Types.Write.Parser, new[]{ "Data", "EndStream" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Tap.V2Alpha.Trace), global::Envoy.Data.Tap.V2Alpha.Trace.Parser, new[]{ "Connection", "Events" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Connection properties.
  /// </summary>
  public sealed partial class Connection : pb::IMessage<Connection> {
    private static readonly pb::MessageParser<Connection> _parser = new pb::MessageParser<Connection>(() => new Connection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Connection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Tap.V2Alpha.CaptureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection(Connection other) : this() {
      id_ = other.id_;
      LocalAddress = other.localAddress_ != null ? other.LocalAddress.Clone() : null;
      RemoteAddress = other.remoteAddress_ != null ? other.RemoteAddress.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection Clone() {
      return new Connection(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    /// <summary>
    /// Global unique connection ID for Envoy session. Matches connection IDs used
    /// in Envoy logs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "local_address" field.</summary>
    public const int LocalAddressFieldNumber = 2;
    private global::Envoy.Api.V2.Core.Address localAddress_;
    /// <summary>
    /// Local address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Core.Address LocalAddress {
      get { return localAddress_; }
      set {
        localAddress_ = value;
      }
    }

    /// <summary>Field number for the "remote_address" field.</summary>
    public const int RemoteAddressFieldNumber = 3;
    private global::Envoy.Api.V2.Core.Address remoteAddress_;
    /// <summary>
    /// Remote address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Core.Address RemoteAddress {
      get { return remoteAddress_; }
      set {
        remoteAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Connection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Connection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(LocalAddress, other.LocalAddress)) return false;
      if (!object.Equals(RemoteAddress, other.RemoteAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (localAddress_ != null) hash ^= LocalAddress.GetHashCode();
      if (remoteAddress_ != null) hash ^= RemoteAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (localAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalAddress);
      }
      if (remoteAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RemoteAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (localAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalAddress);
      }
      if (remoteAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Connection other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.localAddress_ != null) {
        if (localAddress_ == null) {
          localAddress_ = new global::Envoy.Api.V2.Core.Address();
        }
        LocalAddress.MergeFrom(other.LocalAddress);
      }
      if (other.remoteAddress_ != null) {
        if (remoteAddress_ == null) {
          remoteAddress_ = new global::Envoy.Api.V2.Core.Address();
        }
        RemoteAddress.MergeFrom(other.RemoteAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            if (localAddress_ == null) {
              localAddress_ = new global::Envoy.Api.V2.Core.Address();
            }
            input.ReadMessage(localAddress_);
            break;
          }
          case 26: {
            if (remoteAddress_ == null) {
              remoteAddress_ = new global::Envoy.Api.V2.Core.Address();
            }
            input.ReadMessage(remoteAddress_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Event in a capture trace.
  /// </summary>
  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Tap.V2Alpha.CaptureReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      Timestamp = other.timestamp_ != null ? other.Timestamp.Clone() : null;
      switch (other.EventSelectorCase) {
        case EventSelectorOneofCase.Read:
          Read = other.Read.Clone();
          break;
        case EventSelectorOneofCase.Write:
          Write = other.Write.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Timestamp for event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Data.Tap.V2Alpha.Event.Types.Read Read {
      get { return eventSelectorCase_ == EventSelectorOneofCase.Read ? (global::Envoy.Data.Tap.V2Alpha.Event.Types.Read) eventSelector_ : null; }
      set {
        eventSelector_ = value;
        eventSelectorCase_ = value == null ? EventSelectorOneofCase.None : EventSelectorOneofCase.Read;
      }
    }

    /// <summary>Field number for the "write" field.</summary>
    public const int WriteFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Data.Tap.V2Alpha.Event.Types.Write Write {
      get { return eventSelectorCase_ == EventSelectorOneofCase.Write ? (global::Envoy.Data.Tap.V2Alpha.Event.Types.Write) eventSelector_ : null; }
      set {
        eventSelector_ = value;
        eventSelectorCase_ = value == null ? EventSelectorOneofCase.None : EventSelectorOneofCase.Write;
      }
    }

    private object eventSelector_;
    /// <summary>Enum of possible cases for the "event_selector" oneof.</summary>
    public enum EventSelectorOneofCase {
      None = 0,
      Read = 2,
      Write = 3,
    }
    private EventSelectorOneofCase eventSelectorCase_ = EventSelectorOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSelectorOneofCase EventSelectorCase {
      get { return eventSelectorCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEventSelector() {
      eventSelectorCase_ = EventSelectorOneofCase.None;
      eventSelector_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(Read, other.Read)) return false;
      if (!object.Equals(Write, other.Write)) return false;
      if (EventSelectorCase != other.EventSelectorCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (eventSelectorCase_ == EventSelectorOneofCase.Read) hash ^= Read.GetHashCode();
      if (eventSelectorCase_ == EventSelectorOneofCase.Write) hash ^= Write.GetHashCode();
      hash ^= (int) eventSelectorCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (eventSelectorCase_ == EventSelectorOneofCase.Read) {
        output.WriteRawTag(18);
        output.WriteMessage(Read);
      }
      if (eventSelectorCase_ == EventSelectorOneofCase.Write) {
        output.WriteRawTag(26);
        output.WriteMessage(Write);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (eventSelectorCase_ == EventSelectorOneofCase.Read) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Read);
      }
      if (eventSelectorCase_ == EventSelectorOneofCase.Write) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Write);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      switch (other.EventSelectorCase) {
        case EventSelectorOneofCase.Read:
          if (Read == null) {
            Read = new global::Envoy.Data.Tap.V2Alpha.Event.Types.Read();
          }
          Read.MergeFrom(other.Read);
          break;
        case EventSelectorOneofCase.Write:
          if (Write == null) {
            Write = new global::Envoy.Data.Tap.V2Alpha.Event.Types.Write();
          }
          Write.MergeFrom(other.Write);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
          case 18: {
            global::Envoy.Data.Tap.V2Alpha.Event.Types.Read subBuilder = new global::Envoy.Data.Tap.V2Alpha.Event.Types.Read();
            if (eventSelectorCase_ == EventSelectorOneofCase.Read) {
              subBuilder.MergeFrom(Read);
            }
            input.ReadMessage(subBuilder);
            Read = subBuilder;
            break;
          }
          case 26: {
            global::Envoy.Data.Tap.V2Alpha.Event.Types.Write subBuilder = new global::Envoy.Data.Tap.V2Alpha.Event.Types.Write();
            if (eventSelectorCase_ == EventSelectorOneofCase.Write) {
              subBuilder.MergeFrom(Write);
            }
            input.ReadMessage(subBuilder);
            Write = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Event message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Data read by Envoy from the transport socket.
      /// </summary>
      public sealed partial class Read : pb::IMessage<Read> {
        private static readonly pb::MessageParser<Read> _parser = new pb::MessageParser<Read>(() => new Read());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Read> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Tap.V2Alpha.Event.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Read() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Read(Read other) : this() {
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Read Clone() {
          return new Read(this);
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 1;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// Binary data read.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Read);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Read other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Data.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Read other) {
          if (other == null) {
            return;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Data written by Envoy to the transport socket.
      /// </summary>
      public sealed partial class Write : pb::IMessage<Write> {
        private static readonly pb::MessageParser<Write> _parser = new pb::MessageParser<Write>(() => new Write());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Write> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Tap.V2Alpha.Event.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Write() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Write(Write other) : this() {
          data_ = other.data_;
          endStream_ = other.endStream_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Write Clone() {
          return new Write(this);
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 1;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// Binary data written.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "end_stream" field.</summary>
        public const int EndStreamFieldNumber = 2;
        private bool endStream_;
        /// <summary>
        /// Stream was half closed after this write.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool EndStream {
          get { return endStream_; }
          set {
            endStream_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Write);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Write other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Data != other.Data) return false;
          if (EndStream != other.EndStream) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (EndStream != false) hash ^= EndStream.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Data.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Data);
          }
          if (EndStream != false) {
            output.WriteRawTag(16);
            output.WriteBool(EndStream);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (EndStream != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Write other) {
          if (other == null) {
            return;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          if (other.EndStream != false) {
            EndStream = other.EndStream;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Data = input.ReadBytes();
                break;
              }
              case 16: {
                EndStream = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Sequence of read/write events that constitute a captured trace on a socket.
  /// Multiple Trace messages might be emitted for a given connection ID, with the
  /// sink (e.g. file set, network) responsible for later reassembly.
  /// </summary>
  public sealed partial class Trace : pb::IMessage<Trace> {
    private static readonly pb::MessageParser<Trace> _parser = new pb::MessageParser<Trace>(() => new Trace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Trace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Tap.V2Alpha.CaptureReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trace(Trace other) : this() {
      Connection = other.connection_ != null ? other.Connection.Clone() : null;
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trace Clone() {
      return new Trace(this);
    }

    /// <summary>Field number for the "connection" field.</summary>
    public const int ConnectionFieldNumber = 1;
    private global::Envoy.Data.Tap.V2Alpha.Connection connection_;
    /// <summary>
    /// Connection properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Data.Tap.V2Alpha.Connection Connection {
      get { return connection_; }
      set {
        connection_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Data.Tap.V2Alpha.Event> _repeated_events_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Data.Tap.V2Alpha.Event.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Data.Tap.V2Alpha.Event> events_ = new pbc::RepeatedField<global::Envoy.Data.Tap.V2Alpha.Event>();
    /// <summary>
    /// Sequence of observed events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Envoy.Data.Tap.V2Alpha.Event> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Trace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Trace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Connection, other.Connection)) return false;
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (connection_ != null) hash ^= Connection.GetHashCode();
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (connection_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Connection);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (connection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connection);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Trace other) {
      if (other == null) {
        return;
      }
      if (other.connection_ != null) {
        if (connection_ == null) {
          connection_ = new global::Envoy.Data.Tap.V2Alpha.Connection();
        }
        Connection.MergeFrom(other.Connection);
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (connection_ == null) {
              connection_ = new global::Envoy.Data.Tap.V2Alpha.Connection();
            }
            input.ReadMessage(connection_);
            break;
          }
          case 18: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
