// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/api/v2/cluster/circuit_breaker.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Api.V2.ClusterNS {

  /// <summary>Holder for reflection information generated from envoy/api/v2/cluster/circuit_breaker.proto</summary>
  public static partial class CircuitBreakerReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/api/v2/cluster/circuit_breaker.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CircuitBreakerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiplbnZveS9hcGkvdjIvY2x1c3Rlci9jaXJjdWl0X2JyZWFrZXIucHJvdG8S",
            "FGVudm95LmFwaS52Mi5jbHVzdGVyGhxlbnZveS9hcGkvdjIvY29yZS9iYXNl",
            "LnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aFGdvZ29w",
            "cm90by9nb2dvLnByb3RvIvYCCg9DaXJjdWl0QnJlYWtlcnMSRAoKdGhyZXNo",
            "b2xkcxgBIAMoCzIwLmVudm95LmFwaS52Mi5jbHVzdGVyLkNpcmN1aXRCcmVh",
            "a2Vycy5UaHJlc2hvbGRzGpwCCgpUaHJlc2hvbGRzEjQKCHByaW9yaXR5GAEg",
            "ASgOMiIuZW52b3kuYXBpLnYyLmNvcmUuUm91dGluZ1ByaW9yaXR5EjUKD21h",
            "eF9jb25uZWN0aW9ucxgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5VSW50MzJW",
            "YWx1ZRI6ChRtYXhfcGVuZGluZ19yZXF1ZXN0cxgDIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5VSW50MzJWYWx1ZRIyCgxtYXhfcmVxdWVzdHMYBCABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuVUludDMyVmFsdWUSMQoLbWF4X3JldHJpZXMYBSAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuVUludDMyVmFsdWVCJloHY2x1c3RlcqoC",
            "FkVudm95LkFwaS5WMi5DbHVzdGVyTlOo4h4BYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Core.BaseReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ClusterNS.CircuitBreakers), global::Envoy.Api.V2.ClusterNS.CircuitBreakers.Parser, new[]{ "Thresholds" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ClusterNS.CircuitBreakers.Types.Thresholds), global::Envoy.Api.V2.ClusterNS.CircuitBreakers.Types.Thresholds.Parser, new[]{ "Priority", "MaxConnections", "MaxPendingRequests", "MaxRequests", "MaxRetries" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// :ref:`Circuit breaking&lt;arch_overview_circuit_break>` settings can be
  /// specified individually for each defined priority.
  /// </summary>
  public sealed partial class CircuitBreakers : pb::IMessage<CircuitBreakers> {
    private static readonly pb::MessageParser<CircuitBreakers> _parser = new pb::MessageParser<CircuitBreakers>(() => new CircuitBreakers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CircuitBreakers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.ClusterNS.CircuitBreakerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CircuitBreakers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CircuitBreakers(CircuitBreakers other) : this() {
      thresholds_ = other.thresholds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CircuitBreakers Clone() {
      return new CircuitBreakers(this);
    }

    /// <summary>Field number for the "thresholds" field.</summary>
    public const int ThresholdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.ClusterNS.CircuitBreakers.Types.Thresholds> _repeated_thresholds_codec
        = pb::FieldCodec.ForMessage(10, global::Envoy.Api.V2.ClusterNS.CircuitBreakers.Types.Thresholds.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.ClusterNS.CircuitBreakers.Types.Thresholds> thresholds_ = new pbc::RepeatedField<global::Envoy.Api.V2.ClusterNS.CircuitBreakers.Types.Thresholds>();
    /// <summary>
    /// If multiple :ref:`Thresholds&lt;envoy_api_msg_cluster.CircuitBreakers.Thresholds>`
    /// are defined with the same :ref:`RoutingPriority&lt;envoy_api_enum_core.RoutingPriority>`,
    /// the first one in the list is used. If no Thresholds is defined for a given
    /// :ref:`RoutingPriority&lt;envoy_api_enum_core.RoutingPriority>`, the default values
    /// are used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Envoy.Api.V2.ClusterNS.CircuitBreakers.Types.Thresholds> Thresholds {
      get { return thresholds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CircuitBreakers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CircuitBreakers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!thresholds_.Equals(other.thresholds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= thresholds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      thresholds_.WriteTo(output, _repeated_thresholds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += thresholds_.CalculateSize(_repeated_thresholds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CircuitBreakers other) {
      if (other == null) {
        return;
      }
      thresholds_.Add(other.thresholds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            thresholds_.AddEntriesFrom(input, _repeated_thresholds_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CircuitBreakers message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A Thresholds defines CircuitBreaker settings for a
      /// :ref:`RoutingPriority&lt;envoy_api_enum_core.RoutingPriority>`.
      /// </summary>
      public sealed partial class Thresholds : pb::IMessage<Thresholds> {
        private static readonly pb::MessageParser<Thresholds> _parser = new pb::MessageParser<Thresholds>(() => new Thresholds());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Thresholds> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Api.V2.ClusterNS.CircuitBreakers.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Thresholds() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Thresholds(Thresholds other) : this() {
          priority_ = other.priority_;
          MaxConnections = other.MaxConnections;
          MaxPendingRequests = other.MaxPendingRequests;
          MaxRequests = other.MaxRequests;
          MaxRetries = other.MaxRetries;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Thresholds Clone() {
          return new Thresholds(this);
        }

        /// <summary>Field number for the "priority" field.</summary>
        public const int PriorityFieldNumber = 1;
        private global::Envoy.Api.V2.Core.RoutingPriority priority_ = 0;
        /// <summary>
        /// The :ref:`RoutingPriority&lt;envoy_api_enum_core.RoutingPriority>`
        /// the specified CircuitBreaker settings apply to.
        /// [#comment:TODO(htuch): add (validate.rules).enum.defined_only = true once
        /// https://github.com/lyft/protoc-gen-validate/issues/42 is resolved.]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Envoy.Api.V2.Core.RoutingPriority Priority {
          get { return priority_; }
          set {
            priority_ = value;
          }
        }

        /// <summary>Field number for the "max_connections" field.</summary>
        public const int MaxConnectionsFieldNumber = 2;
        private static readonly pb::FieldCodec<uint?> _single_maxConnections_codec = pb::FieldCodec.ForStructWrapper<uint>(18);
        private uint? maxConnections_;
        /// <summary>
        /// The maximum number of connections that Envoy will make to the upstream
        /// cluster. If not specified, the default is 1024.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint? MaxConnections {
          get { return maxConnections_; }
          set {
            maxConnections_ = value;
          }
        }

        /// <summary>Field number for the "max_pending_requests" field.</summary>
        public const int MaxPendingRequestsFieldNumber = 3;
        private static readonly pb::FieldCodec<uint?> _single_maxPendingRequests_codec = pb::FieldCodec.ForStructWrapper<uint>(26);
        private uint? maxPendingRequests_;
        /// <summary>
        /// The maximum number of pending requests that Envoy will allow to the
        /// upstream cluster. If not specified, the default is 1024.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint? MaxPendingRequests {
          get { return maxPendingRequests_; }
          set {
            maxPendingRequests_ = value;
          }
        }

        /// <summary>Field number for the "max_requests" field.</summary>
        public const int MaxRequestsFieldNumber = 4;
        private static readonly pb::FieldCodec<uint?> _single_maxRequests_codec = pb::FieldCodec.ForStructWrapper<uint>(34);
        private uint? maxRequests_;
        /// <summary>
        /// The maximum number of parallel requests that Envoy will make to the
        /// upstream cluster. If not specified, the default is 1024.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint? MaxRequests {
          get { return maxRequests_; }
          set {
            maxRequests_ = value;
          }
        }

        /// <summary>Field number for the "max_retries" field.</summary>
        public const int MaxRetriesFieldNumber = 5;
        private static readonly pb::FieldCodec<uint?> _single_maxRetries_codec = pb::FieldCodec.ForStructWrapper<uint>(42);
        private uint? maxRetries_;
        /// <summary>
        /// The maximum number of parallel retries that Envoy will allow to the
        /// upstream cluster. If not specified, the default is 3.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint? MaxRetries {
          get { return maxRetries_; }
          set {
            maxRetries_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Thresholds);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Thresholds other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Priority != other.Priority) return false;
          if (MaxConnections != other.MaxConnections) return false;
          if (MaxPendingRequests != other.MaxPendingRequests) return false;
          if (MaxRequests != other.MaxRequests) return false;
          if (MaxRetries != other.MaxRetries) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Priority != 0) hash ^= Priority.GetHashCode();
          if (maxConnections_ != null) hash ^= MaxConnections.GetHashCode();
          if (maxPendingRequests_ != null) hash ^= MaxPendingRequests.GetHashCode();
          if (maxRequests_ != null) hash ^= MaxRequests.GetHashCode();
          if (maxRetries_ != null) hash ^= MaxRetries.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Priority != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Priority);
          }
          if (maxConnections_ != null) {
            _single_maxConnections_codec.WriteTagAndValue(output, MaxConnections);
          }
          if (maxPendingRequests_ != null) {
            _single_maxPendingRequests_codec.WriteTagAndValue(output, MaxPendingRequests);
          }
          if (maxRequests_ != null) {
            _single_maxRequests_codec.WriteTagAndValue(output, MaxRequests);
          }
          if (maxRetries_ != null) {
            _single_maxRetries_codec.WriteTagAndValue(output, MaxRetries);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Priority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Priority);
          }
          if (maxConnections_ != null) {
            size += _single_maxConnections_codec.CalculateSizeWithTag(MaxConnections);
          }
          if (maxPendingRequests_ != null) {
            size += _single_maxPendingRequests_codec.CalculateSizeWithTag(MaxPendingRequests);
          }
          if (maxRequests_ != null) {
            size += _single_maxRequests_codec.CalculateSizeWithTag(MaxRequests);
          }
          if (maxRetries_ != null) {
            size += _single_maxRetries_codec.CalculateSizeWithTag(MaxRetries);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Thresholds other) {
          if (other == null) {
            return;
          }
          if (other.Priority != 0) {
            Priority = other.Priority;
          }
          if (other.maxConnections_ != null) {
            if (maxConnections_ == null || other.MaxConnections != 0) {
              MaxConnections = other.MaxConnections;
            }
          }
          if (other.maxPendingRequests_ != null) {
            if (maxPendingRequests_ == null || other.MaxPendingRequests != 0) {
              MaxPendingRequests = other.MaxPendingRequests;
            }
          }
          if (other.maxRequests_ != null) {
            if (maxRequests_ == null || other.MaxRequests != 0) {
              MaxRequests = other.MaxRequests;
            }
          }
          if (other.maxRetries_ != null) {
            if (maxRetries_ == null || other.MaxRetries != 0) {
              MaxRetries = other.MaxRetries;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                priority_ = (global::Envoy.Api.V2.Core.RoutingPriority) input.ReadEnum();
                break;
              }
              case 18: {
                uint? value = _single_maxConnections_codec.Read(input);
                if (maxConnections_ == null || value != 0) {
                  MaxConnections = value;
                }
                break;
              }
              case 26: {
                uint? value = _single_maxPendingRequests_codec.Read(input);
                if (maxPendingRequests_ == null || value != 0) {
                  MaxPendingRequests = value;
                }
                break;
              }
              case 34: {
                uint? value = _single_maxRequests_codec.Read(input);
                if (maxRequests_ == null || value != 0) {
                  MaxRequests = value;
                }
                break;
              }
              case 42: {
                uint? value = _single_maxRetries_codec.Read(input);
                if (maxRetries_ == null || value != 0) {
                  MaxRetries = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
