// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/api/v2/eds.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Api.V2 {

  /// <summary>Holder for reflection information generated from envoy/api/v2/eds.proto</summary>
  public static partial class EdsReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/api/v2/eds.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EdsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZlbnZveS9hcGkvdjIvZWRzLnByb3RvEgxlbnZveS5hcGkudjIaHGVudm95",
            "L2FwaS92Mi9kaXNjb3ZlcnkucHJvdG8aJGVudm95L2FwaS92Mi9lbmRwb2lu",
            "dC9lbmRwb2ludC5wcm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90",
            "bxoXdmFsaWRhdGUvdmFsaWRhdGUucHJvdG8aFGdvZ29wcm90by9nb2dvLnBy",
            "b3RvIuwBChVDbHVzdGVyTG9hZEFzc2lnbm1lbnQSHwoMY2x1c3Rlcl9uYW1l",
            "GAEgASgJQgm66cADBHICIAESQwoJZW5kcG9pbnRzGAIgAygLMiouZW52b3ku",
            "YXBpLnYyLmVuZHBvaW50LkxvY2FsaXR5TGJFbmRwb2ludHNCBMjeHwASOgoG",
            "cG9saWN5GAQgASgLMiouZW52b3kuYXBpLnYyLkNsdXN0ZXJMb2FkQXNzaWdu",
            "bWVudC5Qb2xpY3kaMQoGUG9saWN5EicKDWRyb3Bfb3ZlcmxvYWQYASABKAFC",
            "ELrpwAMLEgkZAAAAAAAAWUAy6wEKGEVuZHBvaW50RGlzY292ZXJ5U2Vydmlj",
            "ZRJYCg9TdHJlYW1FbmRwb2ludHMSHi5lbnZveS5hcGkudjIuRGlzY292ZXJ5",
            "UmVxdWVzdBofLmVudm95LmFwaS52Mi5EaXNjb3ZlcnlSZXNwb25zZSIAKAEw",
            "ARJ1Cg5GZXRjaEVuZHBvaW50cxIeLmVudm95LmFwaS52Mi5EaXNjb3ZlcnlS",
            "ZXF1ZXN0Gh8uZW52b3kuYXBpLnYyLkRpc2NvdmVyeVJlc3BvbnNlIiKC0+ST",
            "AhwiFy92Mi9kaXNjb3Zlcnk6ZW5kcG9pbnRzOgEqQgeIAQGo4h4BYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.DiscoveryReflection.Descriptor, global::Envoy.Api.V2.Endpoint.EndpointReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ClusterLoadAssignment), global::Envoy.Api.V2.ClusterLoadAssignment.Parser, new[]{ "ClusterName", "Endpoints", "Policy" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.ClusterLoadAssignment.Types.Policy), global::Envoy.Api.V2.ClusterLoadAssignment.Types.Policy.Parser, new[]{ "DropOverload" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Each route from RDS will map to a single cluster or traffic split across
  /// clusters using weights expressed in the RDS WeightedCluster.
  ///
  /// With EDS, each cluster is treated independently from a LB perspective, with
  /// LB taking place between the Localities within a cluster and at a finer
  /// granularity between the hosts within a locality. For a given cluster, the
  /// effective weight of a host is its load_balancing_weight multiplied by the
  /// load_balancing_weight of its Locality.
  /// </summary>
  public sealed partial class ClusterLoadAssignment : pb::IMessage<ClusterLoadAssignment> {
    private static readonly pb::MessageParser<ClusterLoadAssignment> _parser = new pb::MessageParser<ClusterLoadAssignment>(() => new ClusterLoadAssignment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClusterLoadAssignment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.EdsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterLoadAssignment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterLoadAssignment(ClusterLoadAssignment other) : this() {
      clusterName_ = other.clusterName_;
      endpoints_ = other.endpoints_.Clone();
      Policy = other.policy_ != null ? other.Policy.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterLoadAssignment Clone() {
      return new ClusterLoadAssignment(this);
    }

    /// <summary>Field number for the "cluster_name" field.</summary>
    public const int ClusterNameFieldNumber = 1;
    private string clusterName_ = "";
    /// <summary>
    /// Name of the cluster. This will be the :ref:`service_name
    /// &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name>` value if specified
    /// in the cluster :ref:`EdsClusterConfig
    /// &lt;envoy_api_msg_Cluster.EdsClusterConfig>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterName {
      get { return clusterName_; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endpoints" field.</summary>
    public const int EndpointsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Endpoint.LocalityLbEndpoints> _repeated_endpoints_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Api.V2.Endpoint.LocalityLbEndpoints.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.LocalityLbEndpoints> endpoints_ = new pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.LocalityLbEndpoints>();
    /// <summary>
    /// List of endpoints to load balance to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.LocalityLbEndpoints> Endpoints {
      get { return endpoints_; }
    }

    /// <summary>Field number for the "policy" field.</summary>
    public const int PolicyFieldNumber = 4;
    private global::Envoy.Api.V2.ClusterLoadAssignment.Types.Policy policy_;
    /// <summary>
    /// Load balancing policy settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.ClusterLoadAssignment.Types.Policy Policy {
      get { return policy_; }
      set {
        policy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClusterLoadAssignment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClusterLoadAssignment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterName != other.ClusterName) return false;
      if(!endpoints_.Equals(other.endpoints_)) return false;
      if (!object.Equals(Policy, other.Policy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterName.Length != 0) hash ^= ClusterName.GetHashCode();
      hash ^= endpoints_.GetHashCode();
      if (policy_ != null) hash ^= Policy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterName);
      }
      endpoints_.WriteTo(output, _repeated_endpoints_codec);
      if (policy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Policy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      size += endpoints_.CalculateSize(_repeated_endpoints_codec);
      if (policy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Policy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClusterLoadAssignment other) {
      if (other == null) {
        return;
      }
      if (other.ClusterName.Length != 0) {
        ClusterName = other.ClusterName;
      }
      endpoints_.Add(other.endpoints_);
      if (other.policy_ != null) {
        if (policy_ == null) {
          policy_ = new global::Envoy.Api.V2.ClusterLoadAssignment.Types.Policy();
        }
        Policy.MergeFrom(other.Policy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterName = input.ReadString();
            break;
          }
          case 18: {
            endpoints_.AddEntriesFrom(input, _repeated_endpoints_codec);
            break;
          }
          case 34: {
            if (policy_ == null) {
              policy_ = new global::Envoy.Api.V2.ClusterLoadAssignment.Types.Policy();
            }
            input.ReadMessage(policy_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ClusterLoadAssignment message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Load balancing policy settings.
      /// </summary>
      public sealed partial class Policy : pb::IMessage<Policy> {
        private static readonly pb::MessageParser<Policy> _parser = new pb::MessageParser<Policy>(() => new Policy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Policy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Api.V2.ClusterLoadAssignment.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Policy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Policy(Policy other) : this() {
          dropOverload_ = other.dropOverload_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Policy Clone() {
          return new Policy(this);
        }

        /// <summary>Field number for the "drop_overload" field.</summary>
        public const int DropOverloadFieldNumber = 1;
        private double dropOverload_;
        /// <summary>
        /// Percentage of traffic (0-100) that should be dropped. This
        /// action allows protection of upstream hosts should they unable to
        /// recover from an outage or should they be unable to autoscale and hence
        /// overall incoming traffic volume need to be trimmed to protect them.
        /// [#v2-api-diff: This is known as maintenance mode in v1.]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double DropOverload {
          get { return dropOverload_; }
          set {
            dropOverload_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Policy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Policy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DropOverload, other.DropOverload)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DropOverload != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DropOverload);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DropOverload != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(DropOverload);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DropOverload != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Policy other) {
          if (other == null) {
            return;
          }
          if (other.DropOverload != 0D) {
            DropOverload = other.DropOverload;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                DropOverload = input.ReadDouble();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
