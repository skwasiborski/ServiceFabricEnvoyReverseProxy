// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/filter/fault/v2/fault.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Filter.Fault.V2 {

  /// <summary>Holder for reflection information generated from envoy/config/filter/fault/v2/fault.proto</summary>
  public static partial class FaultReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/filter/fault/v2/fault.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FaultReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihlbnZveS9jb25maWcvZmlsdGVyL2ZhdWx0L3YyL2ZhdWx0LnByb3RvEhxl",
            "bnZveS5jb25maWcuZmlsdGVyLmZhdWx0LnYyGh5nb29nbGUvcHJvdG9idWYv",
            "ZHVyYXRpb24ucHJvdG8aF3ZhbGlkYXRlL3ZhbGlkYXRlLnByb3RvGhRnb2dv",
            "cHJvdG8vZ29nby5wcm90byL5AQoKRmF1bHREZWxheRJRCgR0eXBlGAEgASgO",
            "MjcuZW52b3kuY29uZmlnLmZpbHRlci5mYXVsdC52Mi5GYXVsdERlbGF5LkZh",
            "dWx0RGVsYXlUeXBlQgq66cADBYIBAhABEhoKB3BlcmNlbnQYAiABKA1CCbrp",
            "wAMEKgIYZBJACgtmaXhlZF9kZWxheRgDIAEoCzIZLmdvb2dsZS5wcm90b2J1",
            "Zi5EdXJhdGlvbkIOuunAAwWqAQIqAJjfHwFIACIbCg5GYXVsdERlbGF5VHlw",
            "ZRIJCgVGSVhFRBAAQh0KFGZhdWx0X2RlbGF5X3NlY2lmaWVyEgW46cADAUIE",
            "WgJ2MmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Fault.V2.FaultDelay), global::Envoy.Config.Filter.Fault.V2.FaultDelay.Parser, new[]{ "Type", "Percent", "FixedDelay" }, new[]{ "FaultDelaySecifier" }, new[]{ typeof(global::Envoy.Config.Filter.Fault.V2.FaultDelay.Types.FaultDelayType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Delay specification is used to inject latency into the
  /// HTTP/gRPC/Mongo/Redis operation or delay proxying of TCP connections.
  /// </summary>
  public sealed partial class FaultDelay : pb::IMessage<FaultDelay> {
    private static readonly pb::MessageParser<FaultDelay> _parser = new pb::MessageParser<FaultDelay>(() => new FaultDelay());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaultDelay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Fault.V2.FaultReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaultDelay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaultDelay(FaultDelay other) : this() {
      type_ = other.type_;
      percent_ = other.percent_;
      switch (other.FaultDelaySecifierCase) {
        case FaultDelaySecifierOneofCase.FixedDelay:
          FixedDelay = other.FixedDelay.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaultDelay Clone() {
      return new FaultDelay(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Envoy.Config.Filter.Fault.V2.FaultDelay.Types.FaultDelayType type_ = 0;
    /// <summary>
    /// Delay type to use (fixed|exponential|..). Currently, only fixed delay (step function) is
    /// supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Config.Filter.Fault.V2.FaultDelay.Types.FaultDelayType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "percent" field.</summary>
    public const int PercentFieldNumber = 2;
    private uint percent_;
    /// <summary>
    /// An integer between 0-100 indicating the percentage of operations/connection requests
    /// on which the delay will be injected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Percent {
      get { return percent_; }
      set {
        percent_ = value;
      }
    }

    /// <summary>Field number for the "fixed_delay" field.</summary>
    public const int FixedDelayFieldNumber = 3;
    /// <summary>
    /// Add a fixed delay before forwarding the operation upstream. See
    /// https://developers.google.com/protocol-buffers/docs/proto3#json for
    /// the JSON/YAML Duration mapping. For HTTP/Mongo/Redis, the specified
    /// delay will be injected before a new request/operation. For TCP
    /// connections, the proxying of the connection upstream will be delayed
    /// for the specified period. This is required if type is FIXED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration FixedDelay {
      get { return faultDelaySecifierCase_ == FaultDelaySecifierOneofCase.FixedDelay ? (global::Google.Protobuf.WellKnownTypes.Duration) faultDelaySecifier_ : null; }
      set {
        faultDelaySecifier_ = value;
        faultDelaySecifierCase_ = value == null ? FaultDelaySecifierOneofCase.None : FaultDelaySecifierOneofCase.FixedDelay;
      }
    }

    private object faultDelaySecifier_;
    /// <summary>Enum of possible cases for the "fault_delay_secifier" oneof.</summary>
    public enum FaultDelaySecifierOneofCase {
      None = 0,
      FixedDelay = 3,
    }
    private FaultDelaySecifierOneofCase faultDelaySecifierCase_ = FaultDelaySecifierOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaultDelaySecifierOneofCase FaultDelaySecifierCase {
      get { return faultDelaySecifierCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFaultDelaySecifier() {
      faultDelaySecifierCase_ = FaultDelaySecifierOneofCase.None;
      faultDelaySecifier_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaultDelay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaultDelay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Percent != other.Percent) return false;
      if (!object.Equals(FixedDelay, other.FixedDelay)) return false;
      if (FaultDelaySecifierCase != other.FaultDelaySecifierCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Percent != 0) hash ^= Percent.GetHashCode();
      if (faultDelaySecifierCase_ == FaultDelaySecifierOneofCase.FixedDelay) hash ^= FixedDelay.GetHashCode();
      hash ^= (int) faultDelaySecifierCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Percent != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Percent);
      }
      if (faultDelaySecifierCase_ == FaultDelaySecifierOneofCase.FixedDelay) {
        output.WriteRawTag(26);
        output.WriteMessage(FixedDelay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Percent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Percent);
      }
      if (faultDelaySecifierCase_ == FaultDelaySecifierOneofCase.FixedDelay) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FixedDelay);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaultDelay other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Percent != 0) {
        Percent = other.Percent;
      }
      switch (other.FaultDelaySecifierCase) {
        case FaultDelaySecifierOneofCase.FixedDelay:
          if (FixedDelay == null) {
            FixedDelay = new global::Google.Protobuf.WellKnownTypes.Duration();
          }
          FixedDelay.MergeFrom(other.FixedDelay);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Envoy.Config.Filter.Fault.V2.FaultDelay.Types.FaultDelayType) input.ReadEnum();
            break;
          }
          case 16: {
            Percent = input.ReadUInt32();
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (faultDelaySecifierCase_ == FaultDelaySecifierOneofCase.FixedDelay) {
              subBuilder.MergeFrom(FixedDelay);
            }
            input.ReadMessage(subBuilder);
            FixedDelay = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FaultDelay message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum FaultDelayType {
        /// <summary>
        /// Fixed delay (step function).
        /// </summary>
        [pbr::OriginalName("FIXED")] Fixed = 0,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
